// <auto-generated />
using System;
using HealthInsuranceWebServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthInsuranceWebServer.Migrations
{
    [DbContext(typeof(HealthInsuranceWebServerContext))]
    [Migration("20210104132425_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Admin", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Username");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            Username = "Admin",
                            Password = "123456789"
                        });
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("JoinDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Retired")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Designation = "Senior Cleaner",
                            DoB = new DateTime(1996, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phatltuit@gmail.com",
                            FName = "Phat",
                            JoinDate = new DateTime(2031, 1, 4, 20, 24, 24, 808, DateTimeKind.Local).AddTicks(1844),
                            LName = "Luu Trong",
                            Password = "123",
                            Phone = "058256332X",
                            Retired = false,
                            Status = false,
                            Username = "phatltuit"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Designation = "Junior Cleaner",
                            DoB = new DateTime(1996, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bachpham@gmail.com",
                            FName = "Bach",
                            JoinDate = new DateTime(2031, 1, 4, 20, 24, 24, 810, DateTimeKind.Local).AddTicks(6437),
                            LName = "Pham Xuan",
                            Password = "123456789",
                            Phone = "012345678X",
                            Retired = false,
                            Status = false,
                            Username = "bachpham"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Designation = "Junior Cleaner",
                            DoB = new DateTime(1996, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenvuhoanghoa@gmail.com",
                            FName = "Hoa",
                            JoinDate = new DateTime(2031, 1, 4, 20, 24, 24, 810, DateTimeKind.Local).AddTicks(6480),
                            LName = "Nguyen Vu Hoang",
                            Password = "123456789",
                            Phone = "01232278X",
                            Retired = false,
                            Status = false,
                            Username = "nguyenvuhoanghoa"
                        });
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.Property<bool>("Retired")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("FeedbackId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Hospital", b =>
                {
                    b.Property<int>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Retired")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("HospitalId");

                    b.ToTable("Hospital");

                    b.HasData(
                        new
                        {
                            HospitalId = 1,
                            HospitalName = "Bệnh viện Nhân Dân Gia Định",
                            Phone = "08-3841-2692",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 2,
                            HospitalName = "Bệnh viện Đại học Y Dược TP HCM",
                            Phone = "08-3855-4269",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 3,
                            HospitalName = "Bệnh viện Y Học Cổ Truyển",
                            Phone = "08-3932-6004",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 4,
                            HospitalName = "Bệnh viện Bình Dân",
                            Phone = "08-3839-4747",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 5,
                            HospitalName = "Bệnh viện Tai Mũi Họng TP HCM",
                            Phone = "08-3931-7381",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 6,
                            HospitalName = "Bệnh viện Mắt TP HCM",
                            Phone = "08-3932-6732",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 7,
                            HospitalName = "Bệnh viện Nhi Đồng 2",
                            Phone = "08-3829-8385",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 8,
                            HospitalName = "Bệnh viện Đa Khoa Vạn Hạnh",
                            Phone = "08-3863-1272",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 9,
                            HospitalName = "Bệnh viện Đa Khoa Hoàn Mỹ",
                            Phone = "08-3990-2468",
                            Retired = false
                        },
                        new
                        {
                            HospitalId = 10,
                            HospitalName = "Bệnh Viện Đa Khoa Hồng Đức",
                            Phone = "08-3996-9999",
                            Retired = false
                        });
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.InsuranceCompany", b =>
                {
                    b.Property<int>("InsuranceCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("InsCompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Retired")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("InsuranceCompanyId");

                    b.ToTable("InsuranceCompany");

                    b.HasData(
                        new
                        {
                            InsuranceCompanyId = 1,
                            InsCompanyName = "Công ty Bảo Việt Nhân Thọ",
                            Phone = "028-39-101-660",
                            Retired = false,
                            Url = "https://www.baovietnhantho.com.vn/"
                        },
                        new
                        {
                            InsuranceCompanyId = 2,
                            InsCompanyName = "Công ty TNHH bảo hiểm nhân thọ Prudential",
                            Phone = "(028)-39-101-660",
                            Retired = false,
                            Url = "https://www.prudential.com.vn/"
                        },
                        new
                        {
                            InsuranceCompanyId = 3,
                            InsCompanyName = "Công ty TNHH Manulife",
                            Phone = "1234-5678-1011",
                            Retired = false,
                            Url = "https://www.manulife.com.vn/"
                        },
                        new
                        {
                            InsuranceCompanyId = 4,
                            InsCompanyName = "Công ty TNHH Bảo hiểm Nhân thọ Dai-ichi",
                            Phone = "028-3810-0888",
                            Retired = false,
                            Url = "https://dai-ichi-life.com.vn/"
                        },
                        new
                        {
                            InsuranceCompanyId = 5,
                            InsCompanyName = "Công ty TNHH bảo hiểm nhân thọ AIA",
                            Phone = "028-3812-2777",
                            Retired = false,
                            Url = "https://www.aia.com.vn/"
                        },
                        new
                        {
                            InsuranceCompanyId = 6,
                            InsCompanyName = "Công ty TNHH Bảo hiểm Nhân thọ Sun Life",
                            Phone = "028-629-85-888",
                            Retired = false,
                            Url = "https://www.sunlife.com.vn/"
                        },
                        new
                        {
                            InsuranceCompanyId = 7,
                            InsCompanyName = "Công ty TNHH bảo hiểm nhân thọ Generali",
                            Phone = "1234-5678-1011",
                            Retired = false,
                            Url = "https://www.generali-life.com.vn/"
                        },
                        new
                        {
                            InsuranceCompanyId = 8,
                            InsCompanyName = "Công ty TNHH Bảo hiểm Nhân thọ Chubb",
                            Phone = "028-3827-8989",
                            Retired = false,
                            Url = "https://www.chubb.com/"
                        },
                        new
                        {
                            InsuranceCompanyId = 9,
                            InsCompanyName = "Công ty TNHH Bảo hiểm Hanwha Life",
                            Phone = "028-3914-9100",
                            Retired = false,
                            Url = "https://www.hanwhalife.com.vn/"
                        },
                        new
                        {
                            InsuranceCompanyId = 10,
                            InsCompanyName = "Công ty TNHH bảo hiểm nhân thọ Aviva",
                            Phone = "1900-633-369",
                            Retired = false,
                            Url = "https://www.aviva.com.vn/"
                        });
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Benefit")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<float>("Emi")
                        .HasColumnType("real");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<int>("InsCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PolicyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool>("Retired")
                        .HasColumnType("bit");

                    b.HasKey("PolicyId");

                    b.HasIndex("HospitalId");

                    b.HasIndex("InsCompanyId");

                    b.ToTable("Policy");

                    b.HasData(
                        new
                        {
                            PolicyId = 1,
                            Amount = 3000f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 250f,
                            HospitalId = 1,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00001",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 2,
                            Amount = 2467f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 123f,
                            HospitalId = 2,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00002",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 3,
                            Amount = 9876f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 222f,
                            HospitalId = 3,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00003",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 4,
                            Amount = 2345f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 785f,
                            HospitalId = 4,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00004",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 5,
                            Amount = 9876f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 234f,
                            HospitalId = 5,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00005",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 6,
                            Amount = 12345f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 111f,
                            HospitalId = 6,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00006",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 7,
                            Amount = 123f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 222f,
                            HospitalId = 7,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00007",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 8,
                            Amount = 987654f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 250f,
                            HospitalId = 8,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00008",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 9,
                            Amount = 347f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 96f,
                            HospitalId = 9,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00009",
                            Retired = false
                        },
                        new
                        {
                            PolicyId = 10,
                            Amount = 1000f,
                            Benefit = "Random Benefit",
                            Description = "Random Description",
                            Emi = 250f,
                            HospitalId = 10,
                            InsCompanyId = 1,
                            PolicyName = "Random Name",
                            PolicyNumber = "21-00010",
                            Retired = false
                        });
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.PolicyApproval", b =>
                {
                    b.Property<int>("ApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<bool>("Retired")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ApprovalId");

                    b.HasIndex("RequestId");

                    b.ToTable("PolicyApproval");
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.PolicyEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Emi")
                        .HasColumnType("real");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PolicyId");

                    b.ToTable("PolicyEmployee");
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.PolicyRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<float>("Emi")
                        .HasColumnType("real");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RequestDate")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RequestId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PolicyId");

                    b.ToTable("PolicyRequest");
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Employee", b =>
                {
                    b.OwnsOne("HealthInsuranceWebServer.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("Country")
                                .HasColumnName("Country")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("District")
                                .HasColumnName("District")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("PostalCode")
                                .HasColumnName("PostalCode")
                                .HasColumnType("nvarchar(10)")
                                .HasMaxLength(10);

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("nvarchar(255)")
                                .HasMaxLength(255);

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employee");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.HasData(
                                new
                                {
                                    EmployeeId = 1,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Hóc Môn",
                                    PostalCode = "",
                                    Street = "Nguyễn Ảnh Thủ, Bà Điểm"
                                },
                                new
                                {
                                    EmployeeId = 2,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 12",
                                    PostalCode = "",
                                    Street = "Tân Thới Nhất"
                                },
                                new
                                {
                                    EmployeeId = 3,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận Bình Thạnh",
                                    PostalCode = "",
                                    Street = "Xô Viết Nghệ Tĩnh"
                                });
                        });
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Feedback", b =>
                {
                    b.HasOne("HealthInsuranceWebServer.Models.Employee", "Employee")
                        .WithMany("Feedbacks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Hospital", b =>
                {
                    b.OwnsOne("HealthInsuranceWebServer.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("HospitalId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("Country")
                                .HasColumnName("Country")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("District")
                                .HasColumnName("District")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("PostalCode")
                                .HasColumnName("PostalCode")
                                .HasColumnType("nvarchar(10)")
                                .HasMaxLength(10);

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("nvarchar(255)")
                                .HasMaxLength(255);

                            b1.HasKey("HospitalId");

                            b1.ToTable("Hospital");

                            b1.WithOwner()
                                .HasForeignKey("HospitalId");

                            b1.HasData(
                                new
                                {
                                    HospitalId = 1,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận Bình Thạnh",
                                    PostalCode = "72316",
                                    Street = "1 Nơ Trang Long"
                                },
                                new
                                {
                                    HospitalId = 2,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 5",
                                    PostalCode = "72709",
                                    Street = "215 Hồng Bàng"
                                },
                                new
                                {
                                    HospitalId = 3,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 3",
                                    PostalCode = "72406",
                                    Street = "Nam Kỳ Khởi Nghĩa"
                                },
                                new
                                {
                                    HospitalId = 4,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 3",
                                    PostalCode = "72416",
                                    Street = "Điện Biên Phủ"
                                },
                                new
                                {
                                    HospitalId = 5,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 3",
                                    PostalCode = "72414",
                                    Street = "155B Trần Quốc Thảo"
                                },
                                new
                                {
                                    HospitalId = 6,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 3",
                                    PostalCode = "72417",
                                    Street = "Điện Biên Phủ"
                                },
                                new
                                {
                                    HospitalId = 7,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 1",
                                    PostalCode = "71007",
                                    Street = "33 Nguyễn Du"
                                },
                                new
                                {
                                    HospitalId = 8,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 10",
                                    PostalCode = "72510",
                                    Street = "Sư Vạn Hạnh"
                                },
                                new
                                {
                                    HospitalId = 9,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận Phú Nhuận",
                                    PostalCode = "72209",
                                    Street = "60 - 60A Phan Xích Long"
                                },
                                new
                                {
                                    HospitalId = 10,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận Gò Vấp",
                                    PostalCode = "71411",
                                    Street = "32/2 Thống Nhất"
                                });
                        });
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.InsuranceCompany", b =>
                {
                    b.OwnsOne("HealthInsuranceWebServer.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("InsuranceCompanyId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("Country")
                                .HasColumnName("Country")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("District")
                                .HasColumnName("District")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("PostalCode")
                                .HasColumnName("PostalCode")
                                .HasColumnType("nvarchar(10)")
                                .HasMaxLength(10);

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("nvarchar(255)")
                                .HasMaxLength(255);

                            b1.HasKey("InsuranceCompanyId");

                            b1.ToTable("InsuranceCompany");

                            b1.WithOwner()
                                .HasForeignKey("InsuranceCompanyId");

                            b1.HasData(
                                new
                                {
                                    InsuranceCompanyId = 1,
                                    City = "Ha Noi",
                                    Country = "Vietnam",
                                    District = "Nam Từ Liêm",
                                    PostalCode = "12014",
                                    Street = "Phạm Hùng"
                                },
                                new
                                {
                                    InsuranceCompanyId = 2,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = " Quận 1",
                                    PostalCode = "71006",
                                    Street = "Tôn Đức Thắng"
                                },
                                new
                                {
                                    InsuranceCompanyId = 3,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 7",
                                    PostalCode = "72911",
                                    Street = "75 Hoàng Văn Thái"
                                },
                                new
                                {
                                    InsuranceCompanyId = 4,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận Phú Nhuận",
                                    PostalCode = "72206",
                                    Street = "149-151 Nguyễn Văn Trỗi"
                                },
                                new
                                {
                                    InsuranceCompanyId = 5,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 1",
                                    PostalCode = "71007",
                                    Street = "67 Lê Lợi"
                                },
                                new
                                {
                                    InsuranceCompanyId = 6,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 1",
                                    PostalCode = "71015",
                                    Street = "5 Công Trường Mê Linh"
                                },
                                new
                                {
                                    InsuranceCompanyId = 7,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 1",
                                    PostalCode = "71011",
                                    Street = "76 Lê Lai"
                                },
                                new
                                {
                                    InsuranceCompanyId = 8,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 1",
                                    PostalCode = "71015",
                                    Street = "115 Nguyễn Huệ"
                                },
                                new
                                {
                                    InsuranceCompanyId = 9,
                                    City = "Ho Chi Minh City",
                                    Country = "Vietnam",
                                    District = "Quận 1",
                                    PostalCode = "71007",
                                    Street = "81 - 85 Hàm Nghi"
                                },
                                new
                                {
                                    InsuranceCompanyId = 10,
                                    City = "Ha Noi",
                                    Country = "Vietnam",
                                    District = "Quận Đống Đa",
                                    PostalCode = "11508",
                                    Street = "229 Tây Sơn"
                                });
                        });
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Notification", b =>
                {
                    b.HasOne("HealthInsuranceWebServer.Models.Admin", "Admin")
                        .WithMany("Notification")
                        .HasForeignKey("AdminId");

                    b.HasOne("HealthInsuranceWebServer.Models.Employee", "Employee")
                        .WithMany("Notification")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.Policy", b =>
                {
                    b.HasOne("HealthInsuranceWebServer.Models.Hospital", "Hospitals")
                        .WithMany("Policies")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthInsuranceWebServer.Models.InsuranceCompany", "InsCompany")
                        .WithMany("Policies")
                        .HasForeignKey("InsCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.PolicyApproval", b =>
                {
                    b.HasOne("HealthInsuranceWebServer.Models.PolicyRequest", "PolicyRequest")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.PolicyEmployee", b =>
                {
                    b.HasOne("HealthInsuranceWebServer.Models.Employee", "Employee")
                        .WithMany("PolicyEmployee")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthInsuranceWebServer.Models.Policy", "Policy")
                        .WithMany("PolicyEmployees")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HealthInsuranceWebServer.Models.PolicyRequest", b =>
                {
                    b.HasOne("HealthInsuranceWebServer.Models.Employee", "Employee")
                        .WithMany("PolicyRequest")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthInsuranceWebServer.Models.Policy", "Policy")
                        .WithMany("PolicyRequests")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
